generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Food {
  id          Int                   @id @default(autoincrement())
  category    String
  name        String
  price       Int
  description String?
  sideDish    Boolean
  image       String
  video       String?
  ordersFood  OrderFoodbyCustumer[]
}

model Order {
  id                  Int                   @id @default(autoincrement())
  sendedAt            DateTime              @default(now())
  aclaration          String?
  orderFoodByCostumer OrderFoodbyCustumer[]
  commands            Commands?             @relation(fields: [commandsId], references: [id])
  commandsId          Int?
}

model Customer {
  id     Int                   @id @default(autoincrement())
  name   String
  email  String?
  orders OrderFoodbyCustumer[]
}

model OrderFoodbyCustumer {
  id         Int      @id @default(autoincrement())
  orderId    Int
  foodId     Int
  customerId Int // Linking to the customer who placed the order
  quantity   Int // Quantity of this food in the order
  order      Order    @relation(fields: [orderId], references: [id])
  food       Food     @relation(fields: [foodId], references: [id])
  customer   Customer @relation(fields: [customerId], references: [id])
  // ... other fields related to this relation if needed
}

model Table {
  id       Int        @id @default(autoincrement())
  state    Boolean
  area     Int?
  Waiter   Waiter?    @relation(fields: [waiterId], references: [id])
  waiterId Int?
  commands Commands[]
}

model Waiter {
  id     Int     @id @default(autoincrement())
  name   String
  tables Table[]
}

model Commands {
  id       Int      @id @default(autoincrement())
  sendedAt DateTime @default(now())
  total    Float
  orders   Order[]
  tableId  Int?
  table    Table?   @relation(fields: [tableId], references: [id])
}
